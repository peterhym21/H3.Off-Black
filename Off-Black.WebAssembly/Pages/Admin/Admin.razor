@page "/Super/Secret/Admin/Page"
@inject HttpClient Http
@inject IToastService ToastService
<div class="row">
    <div class="col-8 ">
        <input class="form-control" type="text" placeholder="Seach Here" @bind="SearchTerm" />
    </div>
    <div class="col-2">
        <button type="button" class="btn btn-info form-control" @onclick="OnSearch">Search</button>
    </div>
    <div class="col-2 text-center">
        <a href="/Super/Secret/Admin/Page/Create" class="btn btn-success form-control">Create</a>
    </div>
</div>
<br />
<br />

@if (ProductDTOs != null)
{
    <table class="text-center col-12 table">
        <tr>
            <th>Picture</th>
            <th>Name</th>
            <th>Amount</th>
            <th>Edit</th>
            <th>Delete</th>
        </tr>
        @foreach (var items in ProductDTOs)
        {
            <tr>
                <td><img src="@items.ProductImagePath" alt="prorduct Image" height="75" /></td>
                <td>@items.ProductName</td>
                <td>@items.Amount</td>
                <td><a href="/Super/Secret/Admin/Page/Edit/@items.ProductID" class="btn btn-success form-control">Edit</a></td>
                <td><button class="btn btn-danger form-control" @onclick="() => Delete(items)">Delete</button></td>
            </tr>
        }

    </table>
}

@code {
    public string SearchTerm { get; set; }
    public List<ProductDTO> ProductDTOs { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ProductDTOs = await Http.GetFromJsonAsync<List<ProductDTO>>("http://localhost:4020/Product/All");
    }

    public async Task OnSearch()
    {
        ProductDTOs = await Http.GetFromJsonAsync<List<ProductDTO>>($"http://localhost:4020/Product/AllBySearchTearm/{SearchTerm}");
    }

    public async Task Delete(ProductDTO product)
    {
        await Http.PutAsJsonAsync<ProductDTO>($"http://localhost:4020/Product/Delete", product);
        await OnInitializedAsync();
        ToastService.ShowInfo("Delete the Product");
    }

}
